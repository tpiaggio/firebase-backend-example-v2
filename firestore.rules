rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {

      function isValidUsername() {
        return request.resource.data.username.matches('^([a-zA-Z0-9_.]){4,30}$');
      }
      function isUsernameAvailable() {
        return !exists(/databases/$(database)/documents/usernames/$(request.resource.data.username.lower()));
      }
      function canUseUsername() {
        return isValidUsername() && isUsernameAvailable();
      }
      function usernameDidNotChange() {
        return request.resource.data.username == resource.data.username;
      }

      match /users/{userId} {
        allow read: if true;
        allow create: if canUseUsername();
        allow update: if usernameDidNotChange() || canUseUsername();
        allow delete: if false;
      }

      match /usernames/{username} {
        allow read, write: if false;
      }
    }
  }
}
